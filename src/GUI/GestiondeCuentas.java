package GUI;

import Clases.BD_TXT;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Edwin Argueta
 */
public class GestiondeCuentas extends javax.swing.JInternalFrame {
    
    /**
     * Creates new form GestiondePersonal
     */
    public GestiondeCuentas() {
        initComponents();
        
        ArrayList<String> modelo = new ArrayList();
        int indicebuscado=BD_TXT.indicebuscado;
        //obtengo el valor de bd y mostrarlos
            //Nombre
        String Usuario =BD_TXT.UsuariosDB.get(indicebuscado).getNombre();
        JBienvendo.setText("Bienvenido "+ Usuario);
            //Saldo
        Double Monto =BD_TXT.UsuariosDB.get(indicebuscado).getMontoEnCuenta();
        JSaldo.setText("Su saldo actual es de:  "+ Monto +" LPS");
        
        Double MontoDolares =BD_TXT.UsuariosDB.get(indicebuscado).getMontoEnDolares();
        JDolares.setText("Dolares disponibles:  "+ MontoDolares +" $$");
        Double MontoEuros =BD_TXT.UsuariosDB.get(indicebuscado).getMontoEnEuros();
        JEuros.setText("Euros disponibles:  "+ MontoEuros +" EUR");
        
            // Historial
                    // BD Historial
            String[][] ArrayBDActual = BD_TXT.UsuariosDB.get(indicebuscado).getRegistrostransaccion();

                    // Guardar al modelo
            for (int i = 0; i < ArrayBDActual.length; i++) {
                if (ArrayBDActual[i][0] != null) {
                    modelo.add("Cuenta actual: " + ArrayBDActual[i][0] +" ||"+ 
                               " Cuenta involucrada: " + ArrayBDActual[i][1] + " ||"+ 
                               " Monto: " + ArrayBDActual[i][2] + " ||"+ 
                               " Tipo de transacción: " + ArrayBDActual[i][3]);
                } else {
                    break;
                }
            }

                 // Mostrar en el JRegistro
            for (int i = 0; i < modelo.size(); i++) {
                JRegistro.append(modelo.get(i) + "\n");
            }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JRegistro = new javax.swing.JTextArea();
        JTransaccion = new javax.swing.JComboBox<>();
        JSaldo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        JBTransaccion = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        JCuentaa = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        JMonto = new javax.swing.JFormattedTextField();
        JBienvendo = new javax.swing.JLabel();
        JDolares = new javax.swing.JLabel();
        JEuros = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Gestion de Cuentas");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Historial de Transacciones");

        JRegistro.setColumns(20);
        JRegistro.setRows(5);
        jScrollPane1.setViewportView(JRegistro);

        JTransaccion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Retiro", "Deposito", "Transferencia" }));
        JTransaccion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                JTransaccionItemStateChanged(evt);
            }
        });
        JTransaccion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JTransaccionMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                JTransaccionMouseReleased(evt);
            }
        });
        JTransaccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTransaccionActionPerformed(evt);
            }
        });
        JTransaccion.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                JTransaccionPropertyChange(evt);
            }
        });

        JSaldo.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N

        jLabel1.setText("Ingrese operacion a realizar: ");

        JBTransaccion.setText("Realizar transacción");
        JBTransaccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBTransaccionActionPerformed(evt);
            }
        });

        jLabel2.setText("Transferir a :");

        JCuentaa.setEditable(false);

        jLabel4.setText("Monto:");

        JMonto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(JSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(JTransaccion, 0, 188, Short.MAX_VALUE)
                            .addComponent(JCuentaa)
                            .addComponent(JMonto))))
                .addGap(0, 74, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JBTransaccion, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(JSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(JTransaccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JCuentaa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(JBTransaccion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        JBienvendo.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N

        JDolares.setText("jLabel5");

        JEuros.setText("jLabel5");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(84, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(JBienvendo, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JDolares, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JEuros, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JBienvendo, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(JDolares)
                        .addGap(18, 18, 18)
                        .addComponent(JEuros)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void JTransaccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTransaccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTransaccionActionPerformed

    private void JBTransaccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBTransaccionActionPerformed

        if(JMonto.getText().isEmpty()){
            BD_TXT bitacoraerrores =new BD_TXT();
            bitacoraerrores.bitacoraTXT(8);
            JOptionPane.showMessageDialog(null, "gestion fallida revise el monto ");

        }else {
            String JTransaccionValor=(String) JTransaccion.getSelectedItem();
            Double Monto=Double.parseDouble(JMonto.getText());
             int indicebuscado=BD_TXT.indicebuscado;
             BD_TXT bitacora =new BD_TXT();
            switch(JTransaccionValor){
                case "Retiro":
                    //condicion de encontrar error 
                    if (Monto>BD_TXT.UsuariosDB.get(indicebuscado).getMontoEnCuenta()){
                        
                        JOptionPane.showMessageDialog(null, "No tienes saldo suficiente en la cuenta");
                         bitacora.bitacoraTXT(6);
                         //termina la validacion
                    }else {
                        BD_TXT.UsuariosDB.get(indicebuscado).retiro(Monto);
                        JOptionPane.showMessageDialog(null, "Retiro Realizado");
                        //actualiza en cuenta
                        BD_TXT.UsuariosDB.get(indicebuscado).addRegistrostransaccion(BD_TXT.UsuariosDB.get(indicebuscado).getNombre(), " ", -Monto, "Retiro");
                        //agregar en bitacora transaccion
                         bitacora.bitacoraTransaccionTXT(2, BD_TXT.UsuariosDB.get(indicebuscado).getNombre(), Monto, null);   
                        ActualizarPantalla();
                    }
                break;

                case "Deposito":
                    BD_TXT.UsuariosDB.get(indicebuscado).deposito(Monto);
                    JOptionPane.showMessageDialog(null, "Deposito Realizado");
                    //registrar en cuenta
                     BD_TXT.UsuariosDB.get(indicebuscado).addRegistrostransaccion(BD_TXT.UsuariosDB.get(indicebuscado).getNombre(), " ", Monto, "Deposito");
                    //agregar en bitacora transaccion
                     bitacora.bitacoraTransaccionTXT(1, BD_TXT.UsuariosDB.get(indicebuscado).getNombre(), Monto, null);
                     ActualizarPantalla();     
                break;

                case "Transferencia":
                    String CuentaTransferir = JCuentaa.getText();
                    BD_TXT bd=new BD_TXT();
                    int indicetrasnferir= bd.buscarNombre(CuentaTransferir);

                    if (indicetrasnferir !=-1){
                        //retirar de esta cuenta && registrar
                        BD_TXT.UsuariosDB.get(indicebuscado).retiro(Monto);
                        JOptionPane.showMessageDialog(null, "Transferencia Realizado");
                        //registrar en cuenta
                        BD_TXT.UsuariosDB.get(indicebuscado).addRegistrostransaccion(BD_TXT.UsuariosDB.get(indicebuscado).getNombre(), BD_TXT.UsuariosDB.get(indicetrasnferir).getNombre(), -Monto, "Transferencia");
                        ActualizarPantalla();

                        //depositar a la otra cuenta && registrar
                        BD_TXT.UsuariosDB.get(indicetrasnferir).deposito(Monto);
                        JOptionPane.showMessageDialog(null, "Deposito Realizado a transferir");
                              //registrar en cuenta
                         BD_TXT.UsuariosDB.get(indicetrasnferir).addRegistrostransaccion(BD_TXT.UsuariosDB.get(indicetrasnferir).getNombre(), BD_TXT.UsuariosDB.get(indicebuscado).getNombre(), Monto, "Transferencia");
                         //agregar en bitacora transaccion
                         bitacora.bitacoraTransaccionTXT(3, BD_TXT.UsuariosDB.get(indicebuscado).getNombre(), Monto, BD_TXT.UsuariosDB.get(indicetrasnferir).getNombre());   
                    }else{
                        JOptionPane.showMessageDialog(null, "Cuenta no encontrada , intente de nuevo");
                        bd.bitacoraTXT(7);
                    }
                break;
            }
        }
    }//GEN-LAST:event_JBTransaccionActionPerformed

    private void JTransaccionPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_JTransaccionPropertyChange

    }//GEN-LAST:event_JTransaccionPropertyChange

    private void JTransaccionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTransaccionMouseExited

    }//GEN-LAST:event_JTransaccionMouseExited

    private void JTransaccionMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTransaccionMouseReleased

    }//GEN-LAST:event_JTransaccionMouseReleased

    private void JTransaccionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_JTransaccionItemStateChanged

        String JTransaccionValor=(String) JTransaccion.getSelectedItem();
        if (JTransaccionValor.equals("Transferencia")){
            JCuentaa.setEditable(true);
        }else {
            JCuentaa.setEditable(false);
            JCuentaa.setText("");
        }
    }//GEN-LAST:event_JTransaccionItemStateChanged

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
               System.out.println(JMonto.getText());
    }//GEN-LAST:event_formInternalFrameOpened
    // unicamente actualiza la de registro
    private void ActualizarPantalla(){
                    int indicebuscado=BD_TXT.indicebuscado;
                            //Mostrar en pantalla
                    JSaldo.setText("Su saldo actual es de:  "+ BD_TXT.UsuariosDB.get(indicebuscado).getMontoEnCuenta() +" LPS");      
                    
                        // Historial
                    // BD Historial
                    JRegistro.setText("");//<--limpiar y volver a poner 
                    String[][] ArrayBDActual = BD_TXT.UsuariosDB.get(indicebuscado).getRegistrostransaccion();
                    ArrayList<String> modelo=new ArrayList();
                            // Guardar al modelo
                    for (int i = 0; i < ArrayBDActual.length; i++) {
                        if (ArrayBDActual[i][0] != null) {
                            modelo.add("Cuenta actual: " + ArrayBDActual[i][0] +" ||"+ 
                                       " Cuenta involucrada: " + ArrayBDActual[i][1] + " ||"+ 
                                       " Monto: " + ArrayBDActual[i][2] + " ||"+ 
                                       " Tipo de transacción: " + ArrayBDActual[i][3]);
                        } else {
                            break;
                        }
                    }
                         // Mostrar en el JRegistro
                    for (int i = 0; i < modelo.size(); i++) {
                        JRegistro.append(modelo.get(i) + "\n");
                    }
    }
            
            
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBTransaccion;
    private javax.swing.JLabel JBienvendo;
    private javax.swing.JTextField JCuentaa;
    private javax.swing.JLabel JDolares;
    private javax.swing.JLabel JEuros;
    private javax.swing.JFormattedTextField JMonto;
    private javax.swing.JTextArea JRegistro;
    private javax.swing.JLabel JSaldo;
    private javax.swing.JComboBox<String> JTransaccion;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
